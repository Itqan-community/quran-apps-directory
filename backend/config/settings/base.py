"""
Base Django settings for quran_apps project.

Generated by 'django-admin startproject' using Django 4.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Security settings
SECRET_KEY = config('SECRET_KEY', default='django-insecure-o!xo=c5k76!dxvb-m*%ka@4uxe_6&8$p=%f=22*9%xk@-fljt7')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=lambda v: [s.strip() for s in v.split(',')])

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_spectacular',  # OpenAPI schema generation
    'corsheaders',
    'django_extensions',
    'django_filters',

    # Local apps
    'core',
    'apps',  # Reverted to use single 'apps' app
    'categories',
    'developers',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

      # Custom API middleware (temporarily commented out for debugging)
    # 'core.api.middleware.APIVersionMiddleware',
    # 'core.api.middleware.APIErrorHandlerMiddleware',
    # 'core.api.middleware.APIRequestLoggingMiddleware',
    # 'core.api.middleware.APICacheMiddleware',
]

ROOT_URLCONF = 'config.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME', default='quran_apps_db'),
        'USER': config('DB_USER', default='postgres'),
        'PASSWORD': config('DB_PASSWORD', default=''),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}

# Fallback to SQLite for development if PostgreSQL is not available
if config('USE_SQLITE', default=False, cast=bool):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Django REST Framework - CMS-Backend Aligned
REST_FRAMEWORK = {
    # Authentication
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],

    # Permissions
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],

    # Pagination
    'DEFAULT_PAGINATION_CLASS': 'core.pagination.StandardResultsSetPagination',
    'PAGE_SIZE': 20,

    # Filtering & Searching
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],

    # Rendering & Parsing
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],

    # Rate Limiting & Throttling
    # Throttling - disabled in development for testing
    'DEFAULT_THROTTLE_CLASSES': [],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/hour',
        'user': '1000/hour',
    },

    # Schema Generation
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# JWT Configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': __import__('datetime').timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': __import__('datetime').timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
}

# drf-spectacular (OpenAPI) settings - CMS-Backend Aligned
SPECTACULAR_SETTINGS = {
    'TITLE': 'Quran Apps Directory API',
    'DESCRIPTION': 'A comprehensive bilingual (Arabic/English) directory of Islamic applications with full-text search and filtering. API versioning is handled via X-API-Version header (e.g., X-API-Version: v1)',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,  # Don't serve default schema, use Scalar instead
    'COMPONENT_SPLIT_REQUEST': True,
    'SCHEMA_PATH_PREFIX': '/api/',

    # API Servers
    'SERVERS': [
        {'url': 'https://quran-apps.itqan.dev', 'description': 'Production'},
        {'url': 'https://staging.quran-apps.itqan.dev', 'description': 'Staging'},
        {'url': 'http://localhost:8000', 'description': 'Local Development'},
    ],

    # Tags for endpoint organization
    'TAGS': [
        {
            'name': 'Apps',
            'description': 'Application browsing, search, filtering, and detailed information'
        },
        {
            'name': 'Categories',
            'description': 'Category management and filtering'
        },
        {
            'name': 'Developers',
            'description': 'Developer information and profiles'
        },
    ],
}

# Cache timeout configuration - CMS Backend aligned
CACHE_TIMEOUTS = {
    # App-related cache timeouts (in seconds)
    'APP_LIST': 600,          # 10 minutes for app listings
    'APP_DETAIL': 300,        # 5 minutes for app details
    'FEATURED_APPS': 600,     # 10 minutes for featured apps
    'SEARCH_RESULTS': 120,    # 2 minutes for search results
    'POPULAR_APPS': 1800,     # 30 minutes for popular apps

    # Category-related cache timeouts
    'CATEGORY_LIST': 1800,    # 30 minutes for category listings
    'CATEGORY_DETAIL': 1800,  # 30 minutes for category details
    'CATEGORY_NAV': 3600,     # 1 hour for navigation data
    'CATEGORY_HIERARCHY': 3600, # 1 hour for category hierarchy

    # Developer-related cache timeouts
    'DEVELOPER_LIST': 1800,   # 30 minutes for developer listings
    'DEVELOPER_DETAIL': 1800, # 30 minutes for developer details
    'DEVELOPER_ANALYTICS': 900, # 15 minutes for analytics

    # General cache timeouts
    'STATIC_DATA': 7200,      # 2 hours for static reference data
    'API_VERSION_INFO': 3600, # 1 hour for API version information
}

# API Configuration - CMS Backend aligned
API_CONFIGURATION = {
    'VERSIONING': {
        'DEFAULT_VERSION': 'v1',
        'SUPPORTED_VERSIONS': ['v1'],
        'VERSION_HEADER': 'X-API-Version',
        'ALLOWED_VERSION_SCHEMES': ['header', 'query', 'url'],
    },
    'RESPONSE_FORMAT': {
        'STANDARDIZE_RESPONSES': True,
        'INCLUDE_META_DATA': True,
        'SUCCESS_MESSAGE_DEFAULT': 'Operation completed successfully',
        'ERROR_CODE_DEFAULT': 'UNKNOWN_ERROR',
    },
    'RATE_LIMITING': {
        'ANON_LIMIT': '100/hour',
        'USER_LIMIT': '1000/hour',
        'BURST_LIMIT': '10/minute',
    },
    'PAGINATION': {
        'DEFAULT_PAGE_SIZE': 20,
        'MAX_PAGE_SIZE': 100,
        'PAGE_SIZE_QUERY_PARAM': 'page_size',
    },
}

# CORS settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://127.0.0.1:4200",
    "https://quran-apps.itqan.dev",
    "https://staging.quran-apps.itqan.dev",
    "https://dev.quran-apps.itqan.dev",
]

CORS_ALLOW_CREDENTIALS = True

# Allow custom headers for API versioning
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-api-version',  # Custom header for API versioning
]

# Cache Configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5 minutes default timeout
    }
}

# Cache timeouts (in seconds)
CACHE_TIMEOUTS = {
    'APP_LIST': 300,      # 5 minutes
    'APP_DETAIL': 600,    # 10 minutes
    'CATEGORY_LIST': 600, # 10 minutes
    'DEVELOPER_LIST': 600, # 10 minutes
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
