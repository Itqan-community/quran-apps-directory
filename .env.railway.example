# =============================================================================
# RAILWAY DEPLOYMENT ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env.railway and configure for each deployment environment
# Variables are loaded by Railway automatically during build and runtime
#
# SECURITY WARNING: Never commit actual secrets to git!
# Always set sensitive values via Railway Dashboard → Variables
# =============================================================================

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
ENVIRONMENT=production
NODE_ENV=production

# =============================================================================
# DJANGO CONFIGURATION (Backend)
# =============================================================================

# Django settings module (points to production settings)
DJANGO_SETTINGS_MODULE=config.settings.production

# Debug mode (MUST be False in production)
DEBUG=False

# Secret key for Django (generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')
SECRET_KEY=your-secret-key-here-change-this

# Python path configuration
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================

# Database connection details (auto-linked from PostgreSQL service in Railway)
DB_ENGINE=django.db.backends.postgresql
DB_NAME=quran_apps_db
DB_USER=postgres
DB_PASSWORD=your-postgres-password-here
DB_HOST=quran-postgres
DB_PORT=5432
DB_SSLMODE=prefer

# =============================================================================
# ALLOWED HOSTS & DOMAIN CONFIGURATION
# =============================================================================

# Comma-separated list of allowed hosts
ALLOWED_HOSTS=quran-apps.itqan.dev,www.quran-apps.itqan.dev

# Frontend domain (used for CORS)
FRONTEND_DOMAIN=https://quran-apps.itqan.dev

# =============================================================================
# CORS & SECURITY
# =============================================================================

# Comma-separated list of origins allowed to make cross-origin requests
CORS_ALLOWED_ORIGINS=https://quran-apps.itqan.dev,https://www.quran-apps.itqan.dev

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS=True

# HTTPS/SSL Configuration
SECURE_SSL_REDIRECT=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# Cookie security settings
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
CSRF_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax
CSRF_COOKIE_SAMESITE=Lax

# =============================================================================
# FRONTEND/ANGULAR CONFIGURATION
# =============================================================================

# API base URL (used by Angular frontend)
NG_APP_API_BASE_URL=https://quran-apps.itqan.dev/api

# Site domain (for SEO and meta tags)
NG_APP_SITE_DOMAIN=https://quran-apps.itqan.dev

# Feature flags
NG_APP_ENABLE_DARK_MODE=true
NG_APP_ENABLE_ANALYTICS=false
NG_APP_FORCE_HTTPS=true
NG_APP_ENABLE_SERVICE_WORKER=true

# Contact information
NG_APP_CONTACT_EMAIL=connect@itqan.dev
NG_APP_TWITTER_HANDLE=itqan_community
NG_APP_GITHUB_ORG=Itqan-community

# =============================================================================
# STATIC FILES & MEDIA (Backend)
# =============================================================================

# Static files configuration (WhiteNoise)
WHITENOISE_COMPRESS=True
WHITENOISE_COMPRESSION_QUALITY=85
WHITENOISE_AUTOREFRESH=False

# =============================================================================
# EMAIL CONFIGURATION (Optional)
# =============================================================================

# Email backend (use SMTP in production)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP configuration (example: SendGrid, AWS SES, etc.)
EMAIL_HOST=smtp.sendgrid.net
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=apikey
EMAIL_HOST_PASSWORD=your-sendgrid-api-key-here
DEFAULT_FROM_EMAIL=noreply@quran-apps.itqan.dev

# =============================================================================
# ERROR TRACKING & MONITORING (Optional)
# =============================================================================

# Sentry DSN for error tracking (leave empty to disable)
# Get from: https://sentry.io → Settings → Projects → Client Keys
SENTRY_DSN=

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
DJANGO_LOG_LEVEL=INFO
DB_LOG_LEVEL=WARNING

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================

# Database connection pooling (connection age in seconds)
DB_CONN_MAX_AGE=600

# Cache backend (optional - use Redis for production)
CACHE_BACKEND=django.core.cache.backends.locmem.LocMemCache

# =============================================================================
# GUNICORN CONFIGURATION (Backend Server)
# =============================================================================

# Gunicorn worker configuration
GUNICORN_WORKERS=4
GUNICORN_WORKER_CLASS=sync
GUNICORN_TIMEOUT=30
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=50

# =============================================================================
# BUILD CONFIGURATION
# =============================================================================

# Angular build optimization
NG_BUILD_OPTIMIZATION=production

# Source maps in production
NG_APP_SOURCE_MAPS=false

# Bundle analyzer (set to true to generate bundle report)
NG_APP_BUNDLE_ANALYZER=false

# =============================================================================
# RAILWAY-SPECIFIC CONFIGURATION
# =============================================================================

# Railway port (auto-assigned, but can override)
PORT=8000

# Railway environment indicator
RAILWAY_ENVIRONMENT=production

# Enable Railway-specific optimizations
RAILWAY_DEPLOYMENT=true

# =============================================================================
# STAGING ENVIRONMENT OVERRIDES
# =============================================================================
# Uncomment and modify these for staging deployments
#
# ENVIRONMENT=staging
# DEBUG=False
# ALLOWED_HOSTS=staging.quran-apps.itqan.dev
# FRONTEND_DOMAIN=https://staging.quran-apps.itqan.dev
# CORS_ALLOWED_ORIGINS=https://staging.quran-apps.itqan.dev
# NG_APP_API_BASE_URL=https://staging.quran-apps.itqan.dev/api
# NG_APP_SITE_DOMAIN=https://staging.quran-apps.itqan.dev
# NG_APP_ENABLE_ANALYTICS=false

# =============================================================================
# DEVELOPMENT ENVIRONMENT OVERRIDES
# =============================================================================
# Uncomment and modify these for development deployments
#
# ENVIRONMENT=development
# DEBUG=True
# ALLOWED_HOSTS=dev.quran-apps.itqan.dev,localhost
# FRONTEND_DOMAIN=https://dev.quran-apps.itqan.dev
# CORS_ALLOWED_ORIGINS=https://dev.quran-apps.itqan.dev,http://localhost:4200
# NG_APP_API_BASE_URL=https://dev.quran-apps.itqan.dev/api
# NG_APP_SITE_DOMAIN=https://dev.quran-apps.itqan.dev
# SECURE_SSL_REDIRECT=False
# NG_APP_ENABLE_ANALYTICS=false

# =============================================================================
# END OF RAILWAY ENVIRONMENT VARIABLES
# =============================================================================
